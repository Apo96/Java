package sperimenti;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class Sperimenti extends JFrame {
    int x = 10;
    int y = 10;

    DrawPanel drawPanel = new DrawPanel();

    public Sperimenti(){
       
        InputMap inputMap = drawPanel.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW);
        ActionMap actionMap = drawPanel.getActionMap();
            
        
        inputMap.put(KeyStroke.getKeyStroke("RIGHT"), "rightAction");
        actionMap.put("rightAction", rightAction);
        
        inputMap.put(KeyStroke.getKeyStroke("LEFT"), "leftAction");
        actionMap.put("leftAction", leftAction);
        
        inputMap.put(KeyStroke.getKeyStroke("UP"), "upAction");
        actionMap.put("upAction", upAction);
        
        inputMap.put(KeyStroke.getKeyStroke("DOWN"), "downAction");
        actionMap.put("downAction", downAction);
        
        add(drawPanel);

        pack();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    private class DrawPanel extends JPanel {

        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.setColor(Color.GRAY);
                    g.fillRect(0, 0, getWidth(), getHeight());
            g.setColor(Color.GREEN);
            g.fillRect(x, y, 10, 10);
        }
        public Dimension getPreferredSize() {
            return new Dimension(400, 400);
        }
    }
    
    Action downAction = new AbstractAction(){
        public void actionPerformed(ActionEvent e) {
            y +=10;
            drawPanel.repaint();
        }
    };
    
    
    Action upAction = new AbstractAction(){
        public void actionPerformed(ActionEvent e) {
            y -=10;
            drawPanel.repaint();
        }
    };
    
      Action leftAction = new AbstractAction(){
        public void actionPerformed(ActionEvent e) {
            x -=10;
            drawPanel.repaint();
        }
    };
    
    Action rightAction = new AbstractAction(){
        public void actionPerformed(ActionEvent e) {
            x +=10;
            drawPanel.repaint();
        }
    };

    
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable(){
            public void run(){
                new Sperimenti();
            }
        });
    }

   
}

